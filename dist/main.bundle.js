"use strict";(self.webpackChunkmicroflix=self.webpackChunkmicroflix||[]).push([[179],{730:(r,n,e)=>{e.d(n,{Z:()=>f});var t=e(537),o=e.n(t),a=e(645),i=e.n(a),A=e(667),s=e.n(A),c=new URL(e(129),e.b),l=new URL(e(109),e.b),d=i()(o());d.push([r.id,"@import url(https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css);"]),d.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;1,800&family=Poppins&display=swap);"]);var p=s()(c),m=s()(l);d.push([r.id,"@media only screen and (min-width: 768px) {\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body {\r\n    font-size: 1.6rem;\r\n    font-family: 'Poppins', sans-serif;\r\n    background-color: rgb(0, 0, 0);\r\n  }\r\n\r\n  ul {\r\n    list-style-type: none;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: #fff;\r\n  }\r\n\r\n  nav {\r\n    color: #fff;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    font-size: 1.8rem;\r\n    padding-left: 5.3rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  nav ul {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    width: 90%;\r\n    gap: 5rem;\r\n    padding: 2rem;\r\n  }\r\n\r\n  .logo {\r\n    background-image: url("+p+");\r\n    background-size: cover;\r\n    width: 9.6rem;\r\n    height: 9.6rem;\r\n  }\r\n\r\n  .cards {\r\n    display: grid;\r\n    width: 90vw;\r\n    gap: 0.9rem;\r\n    margin: auto;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  }\r\n\r\n  .card {\r\n    border-radius: 0.3rem;\r\n    height: 40rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    background-size: cover;\r\n  }\r\n\r\n  .card p {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    width: 100%;\r\n    margin-left: 0.8rem;\r\n    align-items: center;\r\n    font-size: 1.8rem;\r\n    color: #000;\r\n    gap: 0.5rem;\r\n  }\r\n\r\n  form button {\r\n    padding: 1rem 1.5rem;\r\n    border-radius: 0;\r\n    border: none;\r\n  }\r\n\r\n  .card button {\r\n    margin-top: 0.5rem;\r\n    width: 100%;\r\n    padding: 1.2rem;\r\n    border-radius: 0 0 0.3rem 0.3rem;\r\n    border: none;\r\n    box-sizing: border-box;\r\n    color: #000;\r\n    background-color: #e50914;\r\n    font-size: 1.8rem;\r\n  }\r\n\r\n  .bi {\r\n    color: #e50914;\r\n    padding-left: 30%;\r\n  }\r\n\r\n  .likes {\r\n    color: #000;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-style: normal;\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  footer {\r\n    color: #fff;\r\n    margin-top: 2rem;\r\n    padding: 2rem;\r\n    border: 3px solid;\r\n  }\r\n\r\n  .popup {\r\n    border: 3px solid #fff;\r\n    color: #fff;\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    position: absolute;\r\n    top: 10%;\r\n    left: 25%;\r\n    margin: auto;\r\n    width: 50vw;\r\n    gap: 1rem;\r\n    background-color: rgba(0, 0, 0);\r\n  }\r\n\r\n  .close {\r\n    transform: scale(3);\r\n    align-self: flex-end;\r\n    margin-right: 1rem;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .movie {\r\n    width: 45rem;\r\n    height: 30rem;\r\n    background-image: url("+m+");\r\n    background-size: cover;\r\n  }\r\n\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    align-items: flex-start;\r\n    width: 45rem;\r\n  }\r\n\r\n  textarea {\r\n    padding: 1rem;\r\n    width: 20vw;\r\n    height: 10rem;\r\n    resize: none;\r\n  }\r\n\r\n  form input {\r\n    padding: 1rem;\r\n    width: 20vw;\r\n  }\r\n\r\n  .rating {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 45rem;\r\n  }\r\n\r\n  .info {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 45rem;\r\n  }\r\n\r\n  .comments {\r\n    width: 45rem;\r\n  }\r\n}\r\n","",{version:3,sources:["webpack://./src/desktop.css"],names:[],mappings:"AAGA;EACE;IACE,SAAS;IACT,UAAU;EACZ;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,iBAAiB;IACjB,kCAAkC;IAClC,8BAA8B;EAChC;;EAEA;IACE,qBAAqB;EACvB;;EAEA;IACE,qBAAqB;IACrB,WAAW;EACb;;EAEA;IACE,WAAW;IACX,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,iBAAiB;IACjB,oBAAoB;IACpB,mBAAmB;EACrB;;EAEA;IACE,aAAa;IACb,2BAA2B;IAC3B,UAAU;IACV,SAAS;IACT,aAAa;EACf;;EAEA;IACE,yDAAsC;IACtC,sBAAsB;IACtB,aAAa;IACb,cAAc;EAChB;;EAEA;IACE,aAAa;IACb,WAAW;IACX,WAAW;IACX,YAAY;IACZ,sCAAsC;EACxC;;EAEA;IACE,qBAAqB;IACrB,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,yBAAyB;IACzB,sBAAsB;EACxB;;EAEA;IACE,aAAa;IACb,2BAA2B;IAC3B,WAAW;IACX,mBAAmB;IACnB,mBAAmB;IACnB,iBAAiB;IACjB,WAAW;IACX,WAAW;EACb;;EAEA;IACE,oBAAoB;IACpB,gBAAgB;IAChB,YAAY;EACd;;EAEA;IACE,kBAAkB;IAClB,WAAW;IACX,eAAe;IACf,gCAAgC;IAChC,YAAY;IACZ,sBAAsB;IACtB,WAAW;IACX,yBAAyB;IACzB,iBAAiB;EACnB;;EAEA;IACE,cAAc;IACd,iBAAiB;EACnB;;EAEA;IACE,WAAW;IACX,8CAA8C;IAC9C,kBAAkB;IAClB,iBAAiB;EACnB;;EAEA;IACE,WAAW;IACX,gBAAgB;IAChB,aAAa;IACb,iBAAiB;EACnB;;EAEA;IACE,sBAAsB;IACtB,WAAW;IACX,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,WAAW;IACX,SAAS;IACT,+BAA+B;EACjC;;EAEA;IACE,mBAAmB;IACnB,oBAAoB;IACpB,kBAAkB;IAClB,eAAe;EACjB;;EAEA;IACE,YAAY;IACZ,aAAa;IACb,yDAAuC;IACvC,sBAAsB;EACxB;;EAEA;IACE,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,uBAAuB;IACvB,YAAY;EACd;;EAEA;IACE,aAAa;IACb,WAAW;IACX,aAAa;IACb,YAAY;EACd;;EAEA;IACE,aAAa;IACb,WAAW;EACb;;EAEA;IACE,aAAa;IACb,8BAA8B;IAC9B,YAAY;EACd;;EAEA;IACE,aAAa;IACb,8BAA8B;IAC9B,YAAY;EACd;;EAEA;IACE,YAAY;EACd;AACF",sourcesContent:["@import url(\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css\");\r\n@import url(\"https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;1,800&family=Poppins&display=swap\");\r\n\r\n@media only screen and (min-width: 768px) {\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body {\r\n    font-size: 1.6rem;\r\n    font-family: 'Poppins', sans-serif;\r\n    background-color: rgb(0, 0, 0);\r\n  }\r\n\r\n  ul {\r\n    list-style-type: none;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: #fff;\r\n  }\r\n\r\n  nav {\r\n    color: #fff;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    font-size: 1.8rem;\r\n    padding-left: 5.3rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  nav ul {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    width: 90%;\r\n    gap: 5rem;\r\n    padding: 2rem;\r\n  }\r\n\r\n  .logo {\r\n    background-image: url(./imgs/logo.png);\r\n    background-size: cover;\r\n    width: 9.6rem;\r\n    height: 9.6rem;\r\n  }\r\n\r\n  .cards {\r\n    display: grid;\r\n    width: 90vw;\r\n    gap: 0.9rem;\r\n    margin: auto;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  }\r\n\r\n  .card {\r\n    border-radius: 0.3rem;\r\n    height: 40rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    background-size: cover;\r\n  }\r\n\r\n  .card p {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    width: 100%;\r\n    margin-left: 0.8rem;\r\n    align-items: center;\r\n    font-size: 1.8rem;\r\n    color: #000;\r\n    gap: 0.5rem;\r\n  }\r\n\r\n  form button {\r\n    padding: 1rem 1.5rem;\r\n    border-radius: 0;\r\n    border: none;\r\n  }\r\n\r\n  .card button {\r\n    margin-top: 0.5rem;\r\n    width: 100%;\r\n    padding: 1.2rem;\r\n    border-radius: 0 0 0.3rem 0.3rem;\r\n    border: none;\r\n    box-sizing: border-box;\r\n    color: #000;\r\n    background-color: #e50914;\r\n    font-size: 1.8rem;\r\n  }\r\n\r\n  .bi {\r\n    color: #e50914;\r\n    padding-left: 30%;\r\n  }\r\n\r\n  .likes {\r\n    color: #000;\r\n    font-family: 'Courier New', Courier, monospace;\r\n    font-style: normal;\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  footer {\r\n    color: #fff;\r\n    margin-top: 2rem;\r\n    padding: 2rem;\r\n    border: 3px solid;\r\n  }\r\n\r\n  .popup {\r\n    border: 3px solid #fff;\r\n    color: #fff;\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    position: absolute;\r\n    top: 10%;\r\n    left: 25%;\r\n    margin: auto;\r\n    width: 50vw;\r\n    gap: 1rem;\r\n    background-color: rgba(0, 0, 0);\r\n  }\r\n\r\n  .close {\r\n    transform: scale(3);\r\n    align-self: flex-end;\r\n    margin-right: 1rem;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .movie {\r\n    width: 45rem;\r\n    height: 30rem;\r\n    background-image: url(./imgs/movie.jpg);\r\n    background-size: cover;\r\n  }\r\n\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    align-items: flex-start;\r\n    width: 45rem;\r\n  }\r\n\r\n  textarea {\r\n    padding: 1rem;\r\n    width: 20vw;\r\n    height: 10rem;\r\n    resize: none;\r\n  }\r\n\r\n  form input {\r\n    padding: 1rem;\r\n    width: 20vw;\r\n  }\r\n\r\n  .rating {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 45rem;\r\n  }\r\n\r\n  .info {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 45rem;\r\n  }\r\n\r\n  .comments {\r\n    width: 45rem;\r\n  }\r\n}\r\n"],sourceRoot:""}]);const f=d},426:(r,n,e)=>{e.d(n,{Z:()=>A});var t=e(537),o=e.n(t),a=e(645),i=e.n(a)()(o());i.push([r.id,"@import url(https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css);"]),i.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;1,800&family=Poppins&display=swap);"]),i.push([r.id,"@media only screen and (max-width: 768px) {\r\n  ul {\r\n    list-style-type: none;\r\n  }\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAGA;EACE;IACE,qBAAqB;EACvB;AACF",sourcesContent:['@import url("https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css");\r\n@import url("https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;1,800&family=Poppins&display=swap");\r\n\r\n@media only screen and (max-width: 768px) {\r\n  ul {\r\n    list-style-type: none;\r\n  }\r\n}\r\n'],sourceRoot:""}]);const A=i},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,o,a){"string"==typeof r&&(r=[[null,r,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<r.length;c++){var l=[].concat(r[c]);t&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},667:r=>{r.exports=function(r,n){return n||(n={}),r?(r=String(r.__esModule?r.default:r),/^['"].*['"]$/.test(r)&&(r=r.slice(1,-1)),n.hash&&(r+=n.hash),/["'() \t\n]|(%20)/.test(r)||n.needQuotes?'"'.concat(r.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):r):r}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=e.sources.map((function(r){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(r," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var a={},i=[],A=0;A<r.length;A++){var s=r[A],c=t.base?s[0]+t.base:s[0],l=a[c]||0,d="".concat(c," ").concat(l);a[c]=l+1;var p=e(d),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(m);else{var f=o(m,t);t.byIndex=A,n.splice(A,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function o(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,o){var a=t(r=r||[],o=o||{});return function(r){r=r||[];for(var i=0;i<a.length;i++){var A=e(a[i]);n[A].references--}for(var s=t(r,o),c=0;c<a.length;c++){var l=e(a[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=s}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}},106:(r,n,e)=>{var t=e(379),o=e.n(t),a=e(795),i=e.n(a),A=e(569),s=e.n(A),c=e(565),l=e.n(c),d=e(216),p=e.n(d),m=e(589),f=e.n(m),u=e(426),C={};C.styleTagTransform=f(),C.setAttributes=l(),C.insert=s().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=p(),o()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;var g=e(730),B={};B.styleTagTransform=f(),B.setAttributes=l(),B.insert=s().bind(null,"head"),B.domAPI=i(),B.insertStyleElement=p(),o()(g.Z,B),g.Z&&g.Z.locals&&g.Z.locals;const h=document.querySelector(".cards");(async()=>{const r=await fetch("https://api.tvmaze.com/shows");try{const n=await r.json();for(let r=0;r<=15;r+=1){const e=document.createElement("div");e.classList.add("card");const t=n[r];e.id=`${t.id}`,e.innerHTML+=`\n                <p><span>${t.name}</span><i class="bi bi-heart-fill"></i><i class = "likes">5 likes</i></p>\n                <button>comments</button>\n      `,e.style.backgroundImage=`url(${t.image.medium})`,h.append(e)}}catch(r){return r}})(),(async r=>{const n=await fetch("https://api.tvmaze.com/shows/168");try{await n.json()}catch(r){return r}})()},129:(r,n,e)=>{r.exports=e.p+"cfb20eb68014c071df6a.png"},109:(r,n,e)=>{r.exports=e.p+"8ae9156bf67fee355214.jpg"}},r=>{r(r.s=106)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,